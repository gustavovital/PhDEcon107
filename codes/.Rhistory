)
results <- rbind(results, row)
}
return(results)
}
unit_root_table(economics$unemploy)
unit_root_table <- function(series, lags_adf = NULL, lags_kpss = NULL) {
series <- as.numeric(series)
n <- length(series)
if (is.null(lags_adf)) lags_adf <- trunc((n - 1)^(1/3))
if (is.null(lags_kpss)) lags_kpss <- trunc((n - 1)^(1/4))
results <- data.frame()
# ADF Test (only tau)
tau_names <- c(none = "tau1", drift = "tau2", trend = "tau3")
for (type in c("none", "drift", "trend")) {
test <- ur.df(series, type = type, lags = lags_adf)
stat_name <- tau_names[[type]]
stat <- test@teststat[, stat_name]
crit <- test@cval[stat_name, ]
row <- data.frame(
Test = "ADF",
Model = type,
Statistic = round(unname(stat), 3),
CV_1pct = round(crit["1pct"], 3),
CV_5pct = round(crit["5pct"], 3),
CV_10pct = round(crit["10pct"], 3)
)
results <- rbind(results, row)
}
# PP Test (Only Z-tau)
for (model in c("constant", "trend")) {
test <- ur.pp(series, type = "Z-tau", model = model, lags = "long")
row <- data.frame(
Test = "PP",
Model = model,
Statistic = round(test@teststat[[1]], 3),
CV_1pct = round(test@cval[1, "1pct"], 3),
CV_5pct = round(test@cval[1, "5pct"], 3),
CV_10pct = round(test@cval[1, "10pct"], 3)
)
results <- rbind(results, row)
}
# KPSS Test
for (type in c("mu", "tau")) {
test <- ur.kpss(series, type = type, use.lag = lags_kpss)
crit_vals <- test@cval
row <- data.frame(
Test = "KPSS",
Model = type,
Statistic = round(test@teststat, 3),
CV_1pct = round(unname(crit_vals["1pct"]), 3),
CV_5pct = round(unname(crit_vals["5pct"]), 3),
CV_10pct = round(unname(crit_vals["10pct"]), 3)
)
results <- rbind(results, row)
}
return(results)
}
unit_root_table(economics$unemploy)
unit_root_table <- function(series, lags_adf = NULL, lags_kpss = NULL) {
series <- as.numeric(series)
n <- length(series)
if (is.null(lags_adf)) lags_adf <- trunc((n - 1)^(1/3))
if (is.null(lags_kpss)) lags_kpss <- trunc((n - 1)^(1/4))
results <- data.frame()
# ADF Test (only tau)
tau_names <- c(none = "tau1", drift = "tau2", trend = "tau3")
for (type in c("none", "drift", "trend")) {
test <- ur.df(series, type = type, lags = lags_adf)
stat_name <- tau_names[[type]]
stat <- test@teststat[, stat_name]
crit <- test@cval[stat_name, ]
row <- data.frame(
Test = "ADF",
Model = type,
Statistic = round(unname(stat), 3),
CV_1pct = round(crit["1pct"], 3),
CV_5pct = round(crit["5pct"], 3),
CV_10pct = round(crit["10pct"], 3)
)
results <- rbind(results, row)
}
# PP Test (Only Z-tau)
for (model in c("constant", "trend")) {
test <- ur.pp(series, type = "Z-tau", model = model, lags = "long")
row <- data.frame(
Test = "PP",
Model = model,
Statistic = round(test@teststat[[1]], 3),
CV_1pct = round(test@cval[1, "1pct"], 3),
CV_5pct = round(test@cval[1, "5pct"], 3),
CV_10pct = round(test@cval[1, "10pct"], 3)
)
results <- rbind(results, row)
}
# KPSS Test
for (type in c("mu", "tau")) {
test <- ur.kpss(series, type = type, use.lag = lags_kpss)
crit_vals <- test@cval
row <- data.frame(
Test = "KPSS",
Model = type,
Statistic = round(test@teststat, 3),
CV_1pct = round(unname(crit_vals[,"1pct"]), 3),
CV_5pct = round(unname(crit_vals[,"5pct"]), 3),
CV_10pct = round(unname(crit_vals[,"10pct"]), 3)
)
results <- rbind(results, row)
}
return(results)
}
unit_root_table(economics$unemploy)
unit_root_table(economics$unemploy)[1]
unit_root_table(economics$unemploy)
unit_root_table <- function(series, lags_adf = NULL, lags_kpss = NULL) {
series <- as.numeric(series)
n <- length(series)
if (is.null(lags_adf)) lags_adf <- trunc((n - 1)^(1/3))
if (is.null(lags_kpss)) lags_kpss <- trunc((n - 1)^(1/4))
results <- data.frame()
# ADF Test (only tau)
tau_names <- c(none = "tau1", drift = "tau2", trend = "tau3")
for (type in c("none", "drift", "trend")) {
test <- ur.df(series, type = type, lags = lags_adf)
stat_name <- tau_names[[type]]
stat <- test@teststat[, stat_name]
crit <- test@cval[stat_name, ]
row <- data.frame(
Test = "ADF",
Model = type,
Statistic = round(unname(stat), 3),
CV_1pct = round(crit["1pct"], 3),
CV_5pct = round(crit["5pct"], 3),
CV_10pct = round(crit["10pct"], 3)
)
results <- rbind(results, row)
}
# PP Test (Only Z-tau)
for (model in c("constant", "trend")) {
test <- ur.pp(series, type = "Z-tau", model = model, lags = "long")
row <- data.frame(
Test = "PP",
Model = model,
Statistic = round(test@teststat[[1]], 3),
CV_1pct = round(test@cval[1, "1pct"], 3),
CV_5pct = round(test@cval[1, "5pct"], 3),
CV_10pct = round(test@cval[1, "10pct"], 3)
)
results <- rbind(results, row)
}
# KPSS Test
for (type in c("mu", "tau")) {
test <- ur.kpss(series, type = type, use.lag = lags_kpss)
crit_vals <- test@cval
row <- data.frame(
Test = "KPSS",
Model = type,
Statistic = round(test@teststat, 3),
CV_1pct = round(unname(crit_vals[,"1pct"]), 3),
CV_5pct = round(unname(crit_vals[,"5pct"]), 3),
CV_10pct = round(unname(crit_vals[,"10pct"]), 3)
)
results <- rbind(results, row)
}
return(results)
}
unit_root_table(economics$unemploy)
unit_root_table <- function(series, lags_adf = NULL, lags_kpss = NULL) {
series <- as.numeric(series)
n <- length(series)
if (is.null(lags_adf)) lags_adf <- trunc((n - 1)^(1/3))
if (is.null(lags_kpss)) lags_kpss <- trunc((n - 1)^(1/4))
results <- data.frame()
# ADF Test (only tau)
tau_names <- c(none = "tau1", drift = "tau2", trend = "tau3")
for (type in c("none", "drift", "trend")) {
test <- ur.df(series, type = type, lags = lags_adf)
stat_name <- tau_names[[type]]
stat <- test@teststat[, stat_name]
crit <- test@cval[stat_name, ]
row <- data.frame(
Test = "ADF",
Model = type,
Statistic = round(unname(stat), 3),
CV_1pct = round(crit["1pct"], 3),
CV_5pct = round(crit["5pct"], 3),
CV_10pct = round(crit["10pct"], 3)
)
results <- rbind(results, row)
}
# PP Test (Only Z-tau)
for (model in c("constant", "trend")) {
test <- ur.pp(series, type = "Z-tau", model = model, lags = "long")
row <- data.frame(
Test = "PP",
Model = model,
Statistic = round(test@teststat[[1]], 3),
CV_1pct = round(test@cval[1, "1pct"], 3),
CV_5pct = round(test@cval[1, "5pct"], 3),
CV_10pct = round(test@cval[1, "10pct"], 3)
)
results <- rbind(results, row)
}
# KPSS Test
for (type in c("mu", "tau")) {
test <- ur.kpss(series, type = type, use.lag = lags_kpss)
crit_vals <- test@cval
row <- data.frame(
Test = "KPSS",
Model = type,
Statistic = round(test@teststat, 3),
CV_1pct = round(unname(crit_vals[,"1pct"]), 3),
CV_5pct = round(unname(crit_vals[,"5pct"]), 3),
CV_10pct = round(unname(crit_vals[,"10pct"]), 3)
)
results <- rbind(results, row)
}
results %>% rownames() <- NULL
return(results)
}
unit_root_table(economics$unemploy)
unit_root_table <- function(series, lags_adf = NULL, lags_kpss = NULL) {
series <- as.numeric(series)
n <- length(series)
if (is.null(lags_adf)) lags_adf <- trunc((n - 1)^(1/3))
if (is.null(lags_kpss)) lags_kpss <- trunc((n - 1)^(1/4))
results <- data.frame()
# ADF Test (only tau)
tau_names <- c(none = "tau1", drift = "tau2", trend = "tau3")
for (type in c("none", "drift", "trend")) {
test <- ur.df(series, type = type, lags = lags_adf)
stat_name <- tau_names[[type]]
stat <- test@teststat[, stat_name]
crit <- test@cval[stat_name, ]
row <- data.frame(
Test = "ADF",
Model = type,
Statistic = round(unname(stat), 3),
CV_1pct = round(crit["1pct"], 3),
CV_5pct = round(crit["5pct"], 3),
CV_10pct = round(crit["10pct"], 3)
)
results <- rbind(results, row)
}
# PP Test (Only Z-tau)
for (model in c("constant", "trend")) {
test <- ur.pp(series, type = "Z-tau", model = model, lags = "long")
row <- data.frame(
Test = "PP",
Model = model,
Statistic = round(test@teststat[[1]], 3),
CV_1pct = round(test@cval[1, "1pct"], 3),
CV_5pct = round(test@cval[1, "5pct"], 3),
CV_10pct = round(test@cval[1, "10pct"], 3)
)
results <- rbind(results, row)
}
# KPSS Test
for (type in c("mu", "tau")) {
test <- ur.kpss(series, type = type, use.lag = lags_kpss)
crit_vals <- test@cval
row <- data.frame(
Test = "KPSS",
Model = type,
Statistic = round(test@teststat, 3),
CV_1pct = round(unname(crit_vals[,"1pct"]), 3),
CV_5pct = round(unname(crit_vals[,"5pct"]), 3),
CV_10pct = round(unname(crit_vals[,"10pct"]), 3)
)
results <- rbind(results, row)
}
results %>% row.names() <- NULL
return(results)
}
unit_root_table(economics$unemploy)
unit_root_table <- function(series, lags_adf = NULL, lags_kpss = NULL) {
series <- as.numeric(series)
n <- length(series)
if (is.null(lags_adf)) lags_adf <- trunc((n - 1)^(1/3))
if (is.null(lags_kpss)) lags_kpss <- trunc((n - 1)^(1/4))
results <- data.frame()
# ADF Test (only tau)
tau_names <- c(none = "tau1", drift = "tau2", trend = "tau3")
for (type in c("none", "drift", "trend")) {
test <- ur.df(series, type = type, lags = lags_adf)
stat_name <- tau_names[[type]]
stat <- test@teststat[, stat_name]
crit <- test@cval[stat_name, ]
row <- data.frame(
Test = "ADF",
Model = type,
Statistic = round(unname(stat), 3),
CV_1pct = round(crit["1pct"], 3),
CV_5pct = round(crit["5pct"], 3),
CV_10pct = round(crit["10pct"], 3)
)
results <- rbind(results, row)
}
# PP Test (Only Z-tau)
for (model in c("constant", "trend")) {
test <- ur.pp(series, type = "Z-tau", model = model, lags = "long")
row <- data.frame(
Test = "PP",
Model = model,
Statistic = round(test@teststat[[1]], 3),
CV_1pct = round(test@cval[1, "1pct"], 3),
CV_5pct = round(test@cval[1, "5pct"], 3),
CV_10pct = round(test@cval[1, "10pct"], 3)
)
results <- rbind(results, row)
}
# KPSS Test
for (type in c("mu", "tau")) {
test <- ur.kpss(series, type = type, use.lag = lags_kpss)
crit_vals <- test@cval
row <- data.frame(
Test = "KPSS",
Model = type,
Statistic = round(test@teststat, 3),
CV_1pct = round(unname(crit_vals[,"1pct"]), 3),
CV_5pct = round(unname(crit_vals[,"5pct"]), 3),
CV_10pct = round(unname(crit_vals[,"10pct"]), 3)
)
results <- rbind(results, row)
}
results %>% row.names() -> NULL
return(results)
}
unit_root_table(economics$unemploy)
unit_root_table <- function(series, lags_adf = NULL, lags_kpss = NULL) {
series <- as.numeric(series)
n <- length(series)
if (is.null(lags_adf)) lags_adf <- trunc((n - 1)^(1/3))
if (is.null(lags_kpss)) lags_kpss <- trunc((n - 1)^(1/4))
results <- data.frame()
# ADF Test (only tau)
tau_names <- c(none = "tau1", drift = "tau2", trend = "tau3")
for (type in c("none", "drift", "trend")) {
test <- ur.df(series, type = type, lags = lags_adf)
stat_name <- tau_names[[type]]
stat <- test@teststat[, stat_name]
crit <- test@cval[stat_name, ]
row <- data.frame(
Test = "ADF",
Model = type,
Statistic = round(unname(stat), 3),
CV_1pct = round(crit["1pct"], 3),
CV_5pct = round(crit["5pct"], 3),
CV_10pct = round(crit["10pct"], 3)
)
results <- rbind(results, row)
}
# PP Test (Only Z-tau)
for (model in c("constant", "trend")) {
test <- ur.pp(series, type = "Z-tau", model = model, lags = "long")
row <- data.frame(
Test = "PP",
Model = model,
Statistic = round(test@teststat[[1]], 3),
CV_1pct = round(test@cval[1, "1pct"], 3),
CV_5pct = round(test@cval[1, "5pct"], 3),
CV_10pct = round(test@cval[1, "10pct"], 3)
)
results <- rbind(results, row)
}
# KPSS Test
for (type in c("mu", "tau")) {
test <- ur.kpss(series, type = type, use.lag = lags_kpss)
crit_vals <- test@cval
row <- data.frame(
Test = "KPSS",
Model = type,
Statistic = round(test@teststat, 3),
CV_1pct = round(unname(crit_vals[,"1pct"]), 3),
CV_5pct = round(unname(crit_vals[,"5pct"]), 3),
CV_10pct = round(unname(crit_vals[,"10pct"]), 3)
)
results <- rbind(results, row)
}
row.names(results) <- NULL
return(results)
}
unit_root_table(economics$unemploy)
par(mfrow = c(2,2))
plot(USMacro$date, USMacro$r, type = 'l', ylab = 'r', xlab = '')
plot(USMacro$date, USMacro$lm, type = 'l', ylab = 'lm', xlab = '')
# get the data ====
USMacro <- read_csv("~/Downloads/USMacro.csv")
USMacro <- USMacro %>% select(r, lm, lp, lo)
USMacro$date <- seq(as.Date('1959-01-01'), as.Date('1998-12-01'), by = 'm')
par(mfrow = c(2,2))
plot(USMacro$date, USMacro$r, type = 'l', ylab = 'r', xlab = '')
plot(USMacro$date, USMacro$lm, type = 'l', ylab = 'lm', xlab = '')
plot(USMacro$date, USMacro$lp, type = 'l', ylab = 'lp', xlab = '')
plot(USMacro$date, USMacro$lo, type = 'l', ylab = 'lo', xlab = '')
plot(diff(USMacro$r), type = 'l', ylab = 'r', xlab = '')
plot(diff(USMacro$lm), type = 'l', ylab = 'lm', xlab = '')
plot(diff(USMacro$lp), type = 'l', ylab = 'lp', xlab = '')
plot(diff(USMacro$lo), type = 'l', ylab = 'lo', xlab = '')
library(forecast)
date <- seq(as.Date('1959-02-01'), as.Date('1998-12-01'), by = 'm')
diff(USMacro)
USMacro_diff <- diff(USMacro[,c('r', 'lm', 'lp', 'lo')])
USMacro[,c('r', 'lm', 'lp', 'lo')]
diff(USMacro[,c('r', 'lm', 'lp', 'lo')])
USMacro_diff <- data.frame(date = seq(as.Date('1959-02-01'), as.Date('1998-12-01'), by = 'm'),
r_diff = diff(USMacro$r),
lm_diff = diff(USMacro$lm),
lp_diff = diff(USMacro$lp),
lo_diff = diff(USMacro$lo)
)
View(USMacro_diff)
auto.arima(USMacro_diff$lo_diff)
auto.arima(USMacro_diff$r_diff)
auto.arima(USMacro_diff$lm_diff)
auto.arima(USMacro_diff$lp_diff)
auto.arima(USMacro_diff$lo_diff)
auto.arima(USMacro_diff$lo_diff, seasonal = TRUE)
auto.arima(USMacro_diff$lo_diff, method = 'ml')
auto.arima(USMacro_diff$lo_diff)
arima(USMacro_diff$lo_diff, order = c(1, 0, 1), method = 'ml')
arima(USMacro_diff$lo_diff, order = c(1, 0, 1), method = 'ML')
set.seed(2025)
T <- 1000
e <- rnorm(T)
x0 <- rnorm(1)
e0 <- rnorm(1)
X <- numeric(T)
X[1] <- -0.5*x0 + 0.3*e[1] + e0
for(t in 2:T){
X[t] <- -0.5*X[t-1] + 0.3*e[t-1] + e[t]
}
table_aic <- matrix(nrow = 6, ncol = 6)
table_bic <- matrix(nrow = 6, ncol = 6)
for(i in 1:6){
for(j in 1:6){
fit_arima <- arima(X, order = c(i-1,0,j-1), include.mean = FALSE, method = "ML")
table_aic[i,j] <- AIC(fit_arima)
table_bic[i,j] <- BIC(fit_arima)
}
}
table_bic
table_aic
table_aic_min <- matrix(0, nrow=6, ncol=6)
table_bic_min <- matrix(0, nrow=6, ncol=6)
for(i in 1:1000) {
set.seed(i + 123)
T <- 500
e <- rnorm(T)
x0 <- rnorm(1)
e0 <- rnorm(1)
X <- numeric(T)
X[1] <- -0.5 * x0 + 0.3 * e[1] + e0
for (t in 2:T) {
X[t] <- -0.5 * X[t - 1] + 0.3 * e[t - 1] + e[t]
}
table_aic <- matrix(nrow = 6, ncol = 6)
table_bic <- matrix(nrow = 6, ncol = 6)
for (i in 1:6) {
for (j in 1:6) {
fit_arima <- arima(
X,
order = c(i - 1, 0, j - 1),
include.mean = FALSE,
method = "ML"
)
table_aic[i, j] <- AIC(fit_arima)
table_bic[i, j] <- BIC(fit_arima)
}
}
global_min_bic <- min(table_bic, na.rm = TRUE)
global_min_aic <- min(table_aic, na.rm = TRUE)
min_aic <- which(table_aic == global_min_aic, arr.ind = TRUE)
min_bic <- which(table_bic == global_min_bic, arr.ind = TRUE)
table_aic_min[min_aic[1], min_aic[2]] <-
table_aic_min[min_aic[1], min_aic[2]] + 1
table_bic_min[min_bic[1], min_bic[2]] <-
table_bic_min[min_bic[1], min_bic[2]] + 1
}
# Packages needed ====
library(tidyverse)
library(forecast)
source()
# get the data ====
USMacro <- read_csv("~/Downloads/USMacro.csv")
USMacro <- USMacro %>% select(r, lm, lp, lo)
USMacro$date <- seq(as.Date('1959-01-01'), as.Date('1998-12-01'), by = 'm')
par(mfrow = c(2,2))
plot(USMacro$date, USMacro$r, type = 'l', ylab = 'r', xlab = '')
plot(USMacro$date, USMacro$lm, type = 'l', ylab = 'lm', xlab = '')
plot(USMacro$date, USMacro$lp, type = 'l', ylab = 'lp', xlab = '')
plot(USMacro$date, USMacro$lo, type = 'l', ylab = 'lo', xlab = '')
acf(USMacro$r, main = '', xlab = '', ylab = 'r')
acf(USMacro$lm, main = '', xlab = '', ylab = 'lm')
acf(USMacro$lp, main = '', xlab = '', ylab = 'lp')
acf(USMacro$lo, main = '', xlab = '', ylab = 'lo')
plot(diff(USMacro$r), type = 'l', ylab = 'r', xlab = '')
plot(diff(USMacro$lm), type = 'l', ylab = 'lm', xlab = '')
plot(diff(USMacro$lp), type = 'l', ylab = 'lp', xlab = '')
plot(diff(USMacro$lo), type = 'l', ylab = 'lo', xlab = '')
date <- seq(as.Date('1959-02-01'), as.Date('1998-12-01'), by = 'm')
USMacro_diff <- data.frame(date = seq(as.Date('1959-02-01'), as.Date('1998-12-01'), by = 'm'),
r_diff = diff(USMacro$r),
lm_diff = diff(USMacro$lm),
lp_diff = diff(USMacro$lp),
lo_diff = diff(USMacro$lo))
auto.arima(USMacro_diff$r_diff)
auto.arima(USMacro_diff$lm_diff)
auto.arima(USMacro_diff$lp_diff)
auto.arima(USMacro_diff$lo_diff)
arima(USMacro_diff$lo_diff, order = c(1, 0, 1), method = 'ML')
setwd("~/Documents/GitHub/PhDEcon107/codes/")
